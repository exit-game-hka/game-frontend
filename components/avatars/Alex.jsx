/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf 
*/

import React, {forwardRef, useEffect} from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export const Alex = forwardRef(function Alex(props, ref) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(`${process.env.NEXT_PUBLIC_BASE_PATH}/models/avatars/alex/scene.gltf`)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    props.setAnimationActions(actions);
  }, [actions]);

  return (
      <group ref={group} {...props} dispose={null}>
        <group ref={ref} name="Scene">
          <group name="Armature002" position={[0.027, 0.005, -0.002]} rotation={[Math.PI / 2, 0, Math.PI]} scale={0.011}>
            <primitive object={nodes.mixamorigHips} />
            <skinnedMesh name="Ch18" geometry={nodes.Ch18.geometry} material={materials.Ch18_Body} skeleton={nodes.Ch18.skeleton} />
          </group>
        </group>
      </group>
  )
});

useGLTF.preload(`${process.env.NEXT_PUBLIC_BASE_PATH}/models/avatars/alex/scene.gltf`)
